img {

	max-width: 100%;
	height: auto;
	margin-bottom: px($base-line-height/2);
	margin-bottom: rem($base-line-height/2);
	vertical-align: middle;

	// Images in text always seem a little high as they are aligned to the top of the line height;
	// position: relative;
	// top: rem($base-line-height/4);

	&.aligncenter {
		clear: both;
		float: none;
		margin-left: auto;
		margin-right: auto;
	}

	&.alignleft {
		float: left;
		margin-right: px( $grid-col-gutter * 2 );
		margin-right: rem( $grid-col-gutter * 2 );
	}

	&.alignright {
		float: right;
		margin-left: px( $grid-col-gutter * 2 );
		margin-left: rem( $grid-col-gutter * 2 );
	}

	&.size-thumbnail,
	&.attachment-thumbnail {
		width: 240px;
	}
	
	&.size-medium,
	&.attachment-medium {
		width: 420px;
	}
	
	&.size-large,
	&.attachment-large {
		width: 700px;
	}
	
}

// Width of image sizes in columns.
$thumbnail: 3;
$medium: 5;
$large: 8;

// Generate image sizes - in calc relative to the column size.
@for $i from 1 through 12 {
	
	.grid-#{$i} img { 
		
		&.size-large,
		&.attachment-large {
			@if $large >= $i {
				width: 100%;
			} @else {
				$width: $large / $i;
				$expression: "#{$width} * ( 100% + #{rem( $grid-col-gutter * 2)} ) - #{rem( $grid-col-gutter * 2)}";
				@include calc( width, $expression, $width*100% );
			}
			
			@media all and ( max-width: 700px ) {
				width: 100%;	
			}

		}

		&.size-medium,
		&.attachment-medium {
			
			@if $medium >= $i {
				width: 100%;
			} @else {
				$width: $medium / $i;
				$expression: "#{$width} * ( 100% + #{rem( $grid-col-gutter * 2)} ) - #{rem( $grid-col-gutter * 2)}";
				@include calc( width, $expression, $width*100% );
			}
			
			@media all and ( max-width: 700px ) {
				$expression: "0.5 * ( 100% + #{rem( $grid-col-gutter * 2)} ) - #{rem( $grid-col-gutter * 2)}";
				@include calc( width, $expression, 50% );
			}

			@media all and ( max-width: 500px ) {
				width: 100%;	
			}

		}

		&.size-thumbnail,
		&.attachment-thumbnail {
			@if $thumbnail >= $i {
				width: 100%;
			} @else {
				$width: $thumbnail / $i;
				$expression: "#{$width} * ( 100% + #{rem( $grid-col-gutter * 2)} ) - #{rem( $grid-col-gutter * 2)}";
				@include calc( width, $expression, $width*100% );
			}

			@media all and ( max-width: 700px ) {
				$expression: "0.5 * ( 100% + #{rem( $grid-col-gutter * 2)} ) - #{rem( $grid-col-gutter * 2)}";
				@include calc( width, $expression, 50% );
			}

		}

	}

}