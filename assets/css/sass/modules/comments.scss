
#comments {

	clear: both;
	border-top: 1px solid $border-color-lt;

	margin-top: #{ $base-line-height }rem;
	padding-top: #{ $base-line-height }rem;

	.logged-in-as {
		@include small;
		color: $border-color-dk;
		a { color: inherit; }
	}

}

#respond {
	border-top: 1px solid $border-color-lt;
	padding-top: #{ $base-line-height }rem;
	#reply-title {
		margin: 0 0 #{ $base-line-height / 2 }rem;
	}
}

#comments #respond:first-child {
	border: none;
	padding: 0;
}

.comment #respond {
	margin-top: #{ $base-line-height / 2}rem;
}

.commentlist {

	margin: 0;
	list-style: none;

	/* Extend .grid */
	.comment-info,
	.comment-body {
		display: block;
		margin: 0;
		float: left;
		box-sizing: border-box;
		padding-left: #{ $grid-col-gutter }rem;
		padding-right: #{ $grid-col-gutter }rem;
	}

	.avatar {
		display: block;
		width: 100%;
		height: auto;
		img {
			margin: 0;
		}
	}

	.comment {

		@include clearfix;

		padding-top: #{ $base-line-height }rem;
		padding-bottom: #{ $base-line-height / 2 }rem;

		border-top: 1px solid $border-color-lt;

	}

	& > .comment:first-child {
		border-top: none;
	}

	.comment-header {

		margin-bottom: #{ $base-line-height / 2 }rem;

		.comment-author {
			font-weight: bold;
		}

		a {
			color: inherit;
			text-decoration: none;
		}

	}

	.children {

		margin: #{ $base-line-height / 2 }rem 0 #{ -1 * $base-line-height / 2 }rem 0;
		padding-left: 0;
		list-style: none;

	}

	$comment-container-width: 8; // Width of comment container in columns.
	@for $i from 1 through ( $comment-container-width - 2 ) {

		.depth-#{$i} {

			@if $i == 1 {

    			margin-left: 0;

  			} @else {

				$margin: 1 / ( $comment-container-width + 2 - $i ) * 100%;
				$expression: "#{ 1 / ( $comment-container-width + 2 - $i ) } * ( 100% + #{ ( $grid-col-gutter * 2 ) }rem )";
				@include calc( margin-left, $expression, $margin );

			}

		}

		.depth-#{$i} .comment-info {
			width: ( 100% / ( ( $comment-container-width + 1 - $i ) ) ) * 1;
		}

		.depth-#{$i} .comment-body {
			width: ( 100% / ( ( $comment-container-width + 1 - $i ) ) ) * ( $comment-container-width - $i );
		}

	}

	.reply {
		@include small;
		margin-bottom: #{ $base-line-height / 2 }rem;
	}

	@media all and ( max-width: 700px ) {

		$comment-container-width: 6; // Width of comment container in columns.
		@for $i from 1 through ( $comment-container-width ) {

			.depth-#{$i} {

				@if $i == 1 {

	    			margin-left: 0;

	  			} @else {

					$margin: 1 / ( $comment-container-width + 2 - $i ) * 100%;
					$expression: "#{ 1 / ( $comment-container-width + 2 - $i ) } * ( 100% + #{ ( $grid-col-gutter * 2 ) }rem )";
					@include calc( margin-left, $expression, $margin );

				}

			}

			.depth-#{$i} .comment-info {
				width: ( 100% / ( ( $comment-container-width + 1 - $i ) ) ) * 1;
			}

			.depth-#{$i} .comment-body {
				width: ( 100% / ( ( $comment-container-width + 1 - $i ) ) ) * ( $comment-container-width - $i );
			}

		}

	}

}
